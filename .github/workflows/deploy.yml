name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - aws

jobs:

########################################################
#   
#   ██████╗ ██╗   ██╗██╗██╗     ██████╗ 
#   ██╔══██╗██║   ██║██║██║     ██╔══██╗
#   ██████╔╝██║   ██║██║██║     ██║  ██║
#   ██╔══██╗██║   ██║██║██║     ██║  ██║
#   ██████╔╝╚██████╔╝██║███████╗██████╔╝
#   ╚═════╝  ╚═════╝ ╚═╝╚══════╝╚═════╝ 
# 
########################################################

  build-consumer:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::032021926264:role/github-actions-ecr-push-role
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: consumer
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./Application/$ECR_REPOSITORY
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


  build-producer:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::032021926264:role/github-actions-ecr-push-role
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: producer
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./Application/$ECR_REPOSITORY
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


  build-alert-dispatcher-svc:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::032021926264:role/github-actions-ecr-push-role
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: alert-dispatcher-svc
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./Application/$ECR_REPOSITORY
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


  build-quake-detector-svc:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::032021926264:role/github-actions-ecr-push-role
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: quake-detector-svc
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./Application/$ECR_REPOSITORY
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


  build-web:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::032021926264:role/github-actions-ecr-push-role
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: web
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./Application/$ECR_REPOSITORY
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG




########################################################
#   
#   ██████╗ ███████╗██████╗ ██╗      ██████╗ ██╗   ██╗
#   ██╔══██╗██╔════╝██╔══██╗██║     ██╔═══██╗╚██╗ ██╔╝
#   ██║  ██║█████╗  ██████╔╝██║     ██║   ██║ ╚████╔╝ 
#   ██║  ██║██╔══╝  ██╔═══╝ ██║     ██║   ██║  ╚██╔╝  
#   ██████╔╝███████╗██║     ███████╗╚██████╔╝   ██║   
#   ╚═════╝ ╚══════╝╚═╝     ╚══════╝ ╚═════╝    ╚═╝   
#                    
########################################################
  deploy:
    needs: [build-consumer, build-producer, build-web, build-quake-detector-svc, build-alert-dispatcher-svc]
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Helm
        uses: azure/setup-helm
        with:
          version: latest

      - name: Set up kubectl
        uses: azure/setup-kubectl
        with:
          version: latest

      - name: Deploy Helm Chart
        run: |
          helm upgrade --install earthquake-monitor ./Helm/charts/earthquake-monitor \
            --namespace default \
            --set producer.image.repository=032021926264.dkr.ecr.us-east-1.amazonaws.com/producer \
            --set producer.image.tag=${{ github.sha }} \
            --set consumer.image.repository=032021926264.dkr.ecr.us-east-1.amazonaws.com/consumer \
            --set consumer.image.tag=${{ github.sha }} \
            --set web.image.repository=032021926264.dkr.ecr.us-east-1.amazonaws.com/web \
            --set web.image.tag=${{ github.sha }} \
            --set quake-detector-svc.image.repository=032021926264.dkr.ecr.us-east-1.amazonaws.com/quake-detector-svc \
            --set quake-detector-svc.image.tag=${{ github.sha }} \
            --set alert-dispatcher-svc.image.repository=032021926264.dkr.ecr.us-east-1.amazonaws.com/alert-dispatcher-svc \
            --set alert-dispatcher-svc.image.tag=${{ github.sha }} \
            --atomic \
            --timeout 5m



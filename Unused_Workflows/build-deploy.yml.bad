name: Build and Deploy

on:
  push:
    branches:
      - aws

jobs:
  ###########################################
  #   ██████╗ ██╗   ██╗██╗██╗     ██████╗ 
  #   ██╔══██╗██║   ██║██║██║     ██╔══██╗
  #   ██████╔╝██║   ██║██║██║     ██║  ██║
  #   ██╔══██╗██║   ██║██║██║     ██║  ██║
  #   ██████╔╝╚██████╔╝██║███████╗██████╔╝
  #   ╚═════╝  ╚═════╝ ╚═╝╚══════╝╚═════╝ 
  ###########################################

  build-web-main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for changes in Application/web/main
        id: changes
        run: |
          git fetch origin aws
          if git diff --name-only origin/aws...HEAD | grep -q '^Application/web/main/'; then
            echo "run_build=true" >> $GITHUB_ENV
          else
            echo "run_build=false" >> $GITHUB_ENV
          fi

      - name: Skip build
        if: env.run_build == 'false'
        run: echo "No changes in Application/web/main/, skipping build."

      - name: Configure AWS credentials
        if: env.run_build == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::032021926264:role/github-oidc-provider-aws
          aws-region: us-east-1

      - name: Set up Docker Buildx
        if: env.run_build == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        if: env.run_build == 'true'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push [main] image to ECR
        if: env.run_build == 'true'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: main
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build --platform linux/arm64 \
            --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            --push ./Application/web/$ECR_REPOSITORY

  build-web-earthquakes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for changes in Application/web/earthquakes
        id: changes
        run: |
          git fetch origin aws
          if git diff --name-only origin/aws...HEAD | grep -q '^Application/web/earthquakes/'; then
            echo "run_build=true" >> $GITHUB_ENV
          else
            echo "run_build=false" >> $GITHUB_ENV
          fi

      - name: Skip build
        if: env.run_build == 'false'
        run: echo "No changes in Application/web/earthquakes/, skipping build."

      - name: Configure AWS credentials
        if: env.run_build == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::032021926264:role/github-oidc-provider-aws
          aws-region: us-east-1

      - name: Set up Docker Buildx
        if: env.run_build == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        if: env.run_build == 'true'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push [earthquakes] image to ECR
        if: env.run_build == 'true'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: earthquakes
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build --platform linux/arm64 \
            --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            --push ./Application/web/$ECR_REPOSITORY

########################################################
#   
#   ██████╗ ███████╗██████╗ ██╗      ██████╗ ██╗   ██╗
#   ██╔══██╗██╔════╝██╔══██╗██║     ██╔═══██╗╚██╗ ██╔╝
#   ██║  ██║█████╗  ██████╔╝██║     ██║   ██║ ╚████╔╝ 
#   ██║  ██║██╔══╝  ██╔═══╝ ██║     ██║   ██║  ╚██╔╝  
#   ██████╔╝███████╗██║     ███████╗╚██████╔╝   ██║   
#   ╚═════╝ ╚══════╝╚═╝     ╚══════╝ ╚═════╝    ╚═╝   
#                    
########################################################

  deploy:
    needs:
      - build-web-main
      - build-web-earthquakes
    if: ${{ always() }}
    runs-on: [self-hosted, Linux, ARM64, k3s]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy Helm Chart
        run: |
          export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
          #helm template ./Helm/charts/earthquake-monitor --debug
          helm upgrade --install earthquake-monitor ./Helm/charts/earthquake-monitor \
            --namespace default \
            --set producer.image.repository=032021926264.dkr.ecr.us-east-1.amazonaws.com/producer --set producer.image.tag=${{ github.sha }} \
            --set consumer.image.repository=032021926264.dkr.ecr.us-east-1.amazonaws.com/consumer --set consumer.image.tag=${{ github.sha }} \
            --set quake-detector-svc.image.repository=032021926264.dkr.ecr.us-east-1.amazonaws.com/quake-detector-svc --set quake-detector-svc.image.tag=${{ github.sha }} \
            --set alert-dispatcher-svc.image.repository=032021926264.dkr.ecr.us-east-1.amazonaws.com/alert-dispatcher-svc --set alert-dispatcher-svc.image.tag=${{ github.sha }} \
            --timeout 3m
